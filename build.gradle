//buildscript {
//    repositories {
//        jcenter()
//    }
//
//    dependencies {
//        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2'
//        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.8'
//        classpath 'org.ysb33r.gradle:vfs-gradle-plugin:1.0-beta1'
//        classpath 'commons-httpclient:commons-httpclient:3.1'
//    }
//}

plugins {
    id 'nebula.nebula-release' version '4.0.1'
    id 'org.asciidoctor.convert' version '1.5.2'
    id 'com.github.jruby-gradle.base' version '0.3.0'

    // Below is related to Note1 below
    /*
    id 'nebula.maven-publish' version '4.4.4'
    id 'nebula.source-jar' version '4.4.4'
    id 'nebula.javadoc-jar' version '4.4.4'
    */
}

project.group = 'murex.cl'
project.description = 'CL :: Semantic versioning'

dependencies {
    gems 'rubygems:asciidoctor-diagram:1.3.0'
    gems 'rubygems:haml:4.0.6'
}

apply plugin: 'java'
apply plugin: 'com.github.jruby-gradle.base'
apply plugin: 'org.asciidoctor.convert'

repositories {
    maven {
        url 'http://ci-blend-lx/nexus/content/groups/public/'
    }
}

// Note1: Normally this should work, but somehow doesn't when gradle tries to publish metadata
/*
apply plugin: 'maven-publish' 
apply plugin: 'nebula.source-jar'
apply plugin: 'nebula.javadoc-jar'

   publishing {

           repositories {
               maven {
                   url "http://nexus/nexus/content/repositories/murex-components-${project.version.toString().endsWith('-SNAPSHOT') ? 'snapshots' : 'releases' }"
                   credentials {
                       username 'murex-components-calclayer-deployer'
                       password 'C@lcl@yer'
                   }
               }
           }

           publications {
               nebula(MavenPublication) {
                   uploadArchives.repositories.mavenDeployer.pom.version = version
               }
           }
   }
*/

apply plugin: 'nebula.nebula-release'

release {
    // Let the default versioning strategy be the maven style -SNAPSHOT, instead of nebula's devSnapshot
    defaultVersionStrategy = org.ajoberstar.gradle.git.release.opinion.Strategies.SNAPSHOT
}

apply plugin: 'maven'

afterEvaluate {
    uploadArchives {


        task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
            from javadoc.destinationDir
            classifier = 'javadoc'
        }
        task packageSources(type: Jar) {
            from sourceSets.main.allSource
            classifier = 'sources'
        }
        artifacts {
            archives packageJavadoc
            archives packageSources
        }


        repositories {
            mavenDeployer {
                repository(url: "http://nexus/nexus/content/repositories/murex-components-releases") {
                    authentication(userName: "murex-components-calclayer-deployer", password: "C@lcl@yer")
                }
                snapshotRepository(url: "http://nexus/nexus/content/repositories/murex-components-snapshots") {
                    authentication(userName: "murex-components-calclayer-deployer", password: "C@lcl@yer")
                }
            }
        }
    }

    tasks.release.finalizedBy tasks.uploadArchives
}

class AsciiDoctorDefault extends org.asciidoctor.gradle.AsciidoctorTask {

    AsciiDoctorDefault() {
        doFirst {
            System.setProperty('jruby.logger.class', 'org.jruby.util.log.StandardErrorLogger')
        }

        resources {
            from(sourceDir) {
                include 'css/**'
                include 'images/**'
            }
        }

        requires 'asciidoctor-diagram'

        def v = project.version.toString()

        attributes 'build-gradle': new File('build.gradle'),
                'source-highlighter': 'highlightjs',
                'highlightjs-theme': 'github',
                'imagesdir': 'images',
                'imagesoutdir': 'images',
                'sourceDir': '../../main/java',
                'setanchors': 'true',
                'idprefix': '',
                'idseparator': '-',
                'docinfo1': 'true',
                'docversion': v
    }

}

task(generateHtml5, type: AsciiDoctorDefault) {
    dependsOn jrubyPrepareGems
    gemPath jrubyPrepareGems.outputDir
    backends 'html5'
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}
